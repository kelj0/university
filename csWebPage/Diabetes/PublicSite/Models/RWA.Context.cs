//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PublicSite.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RWAEntities : DbContext
    {
        public RWAEntities()
            : base("name=RWAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Aktivnost> Aktivnosts { get; set; }
        public virtual DbSet<Jedinica> Jedinicas { get; set; }
        public virtual DbSet<Kombinacija> Kombinacijas { get; set; }
        public virtual DbSet<KombinacijaDetalji> KombinacijaDetaljis { get; set; }
        public virtual DbSet<Korisnik> Korisniks { get; set; }
        public virtual DbSet<Meni> Menis { get; set; }
        public virtual DbSet<Namirnica> Namirnicas { get; set; }
        public virtual DbSet<NazivObroka> NazivObrokas { get; set; }
        public virtual DbSet<Obrok> Obroks { get; set; }
        public virtual DbSet<Spol> Spols { get; set; }
        public virtual DbSet<TipNamirnice> TipNamirnices { get; set; }
    
        public virtual ObjectResult<string> Dodaj_Jedinicu(string imeJedinice)
        {
            var imeJediniceParameter = imeJedinice != null ?
                new ObjectParameter("ImeJedinice", imeJedinice) :
                new ObjectParameter("ImeJedinice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Dodaj_Jedinicu", imeJediniceParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Dodaj_KombinacijaDetalji(Nullable<int> nazivObrokaID, Nullable<int> uglj, Nullable<int> mast, Nullable<int> prot, Nullable<int> ukup, Nullable<int> kombinacijaID)
        {
            var nazivObrokaIDParameter = nazivObrokaID.HasValue ?
                new ObjectParameter("NazivObrokaID", nazivObrokaID) :
                new ObjectParameter("NazivObrokaID", typeof(int));
    
            var ugljParameter = uglj.HasValue ?
                new ObjectParameter("Uglj", uglj) :
                new ObjectParameter("Uglj", typeof(int));
    
            var mastParameter = mast.HasValue ?
                new ObjectParameter("Mast", mast) :
                new ObjectParameter("Mast", typeof(int));
    
            var protParameter = prot.HasValue ?
                new ObjectParameter("Prot", prot) :
                new ObjectParameter("Prot", typeof(int));
    
            var ukupParameter = ukup.HasValue ?
                new ObjectParameter("Ukup", ukup) :
                new ObjectParameter("Ukup", typeof(int));
    
            var kombinacijaIDParameter = kombinacijaID.HasValue ?
                new ObjectParameter("KombinacijaID", kombinacijaID) :
                new ObjectParameter("KombinacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Dodaj_KombinacijaDetalji", nazivObrokaIDParameter, ugljParameter, mastParameter, protParameter, ukupParameter, kombinacijaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Dodaj_Kombinaciju(Nullable<int> brojObroka, Nullable<System.DateTime> datumKreiranja, Nullable<System.DateTime> vrijediDo)
        {
            var brojObrokaParameter = brojObroka.HasValue ?
                new ObjectParameter("BrojObroka", brojObroka) :
                new ObjectParameter("BrojObroka", typeof(int));
    
            var datumKreiranjaParameter = datumKreiranja.HasValue ?
                new ObjectParameter("DatumKreiranja", datumKreiranja) :
                new ObjectParameter("DatumKreiranja", typeof(System.DateTime));
    
            var vrijediDoParameter = vrijediDo.HasValue ?
                new ObjectParameter("VrijediDo", vrijediDo) :
                new ObjectParameter("VrijediDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Dodaj_Kombinaciju", brojObrokaParameter, datumKreiranjaParameter, vrijediDoParameter);
        }
    
        public virtual ObjectResult<string> Dodaj_Korisnika(string korisnicko_ime, string lozinka, string email, string ime, string prezime, Nullable<System.DateTime> datumRodenja, Nullable<int> visina, Nullable<int> tezina, Nullable<int> iDAktivnost, Nullable<int> tipDia, Nullable<int> iDSpol)
        {
            var korisnicko_imeParameter = korisnicko_ime != null ?
                new ObjectParameter("Korisnicko_ime", korisnicko_ime) :
                new ObjectParameter("Korisnicko_ime", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("Lozinka", lozinka) :
                new ObjectParameter("Lozinka", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var datumRodenjaParameter = datumRodenja.HasValue ?
                new ObjectParameter("DatumRodenja", datumRodenja) :
                new ObjectParameter("DatumRodenja", typeof(System.DateTime));
    
            var visinaParameter = visina.HasValue ?
                new ObjectParameter("Visina", visina) :
                new ObjectParameter("Visina", typeof(int));
    
            var tezinaParameter = tezina.HasValue ?
                new ObjectParameter("Tezina", tezina) :
                new ObjectParameter("Tezina", typeof(int));
    
            var iDAktivnostParameter = iDAktivnost.HasValue ?
                new ObjectParameter("IDAktivnost", iDAktivnost) :
                new ObjectParameter("IDAktivnost", typeof(int));
    
            var tipDiaParameter = tipDia.HasValue ?
                new ObjectParameter("TipDia", tipDia) :
                new ObjectParameter("TipDia", typeof(int));
    
            var iDSpolParameter = iDSpol.HasValue ?
                new ObjectParameter("IDSpol", iDSpol) :
                new ObjectParameter("IDSpol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Dodaj_Korisnika", korisnicko_imeParameter, lozinkaParameter, emailParameter, imeParameter, prezimeParameter, datumRodenjaParameter, visinaParameter, tezinaParameter, iDAktivnostParameter, tipDiaParameter, iDSpolParameter);
        }
    
        public virtual ObjectResult<string> Dodaj_Namirnicu(string naziv, Nullable<int> energija_kcal, Nullable<int> energija_kJ, Nullable<int> tipNamirniceID, Nullable<int> jedinicaID, Nullable<int> kolicina)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var energija_kcalParameter = energija_kcal.HasValue ?
                new ObjectParameter("Energija_kcal", energija_kcal) :
                new ObjectParameter("Energija_kcal", typeof(int));
    
            var energija_kJParameter = energija_kJ.HasValue ?
                new ObjectParameter("Energija_kJ", energija_kJ) :
                new ObjectParameter("Energija_kJ", typeof(int));
    
            var tipNamirniceIDParameter = tipNamirniceID.HasValue ?
                new ObjectParameter("TipNamirniceID", tipNamirniceID) :
                new ObjectParameter("TipNamirniceID", typeof(int));
    
            var jedinicaIDParameter = jedinicaID.HasValue ?
                new ObjectParameter("JedinicaID", jedinicaID) :
                new ObjectParameter("JedinicaID", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("Kolicina", kolicina) :
                new ObjectParameter("Kolicina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Dodaj_Namirnicu", nazivParameter, energija_kcalParameter, energija_kJParameter, tipNamirniceIDParameter, jedinicaIDParameter, kolicinaParameter);
        }
    
        public virtual ObjectResult<string> Dodaj_NazivObroka(string nazivObroka)
        {
            var nazivObrokaParameter = nazivObroka != null ?
                new ObjectParameter("NazivObroka", nazivObroka) :
                new ObjectParameter("NazivObroka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Dodaj_NazivObroka", nazivObrokaParameter);
        }
    
        public virtual ObjectResult<string> Dodaj_TipNamirnice(string tipNamirnice)
        {
            var tipNamirniceParameter = tipNamirnice != null ?
                new ObjectParameter("TipNamirnice", tipNamirnice) :
                new ObjectParameter("TipNamirnice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Dodaj_TipNamirnice", tipNamirniceParameter);
        }
    
        public virtual ObjectResult<Dohvati_Admina_Result> Dohvati_Admina(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Admina_Result>("Dohvati_Admina", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Dohvati_Jedinice_Result> Dohvati_Jedinice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Jedinice_Result>("Dohvati_Jedinice");
        }
    
        public virtual ObjectResult<Dohvati_Jedinicu_Result> Dohvati_Jedinicu(string imeJedinice)
        {
            var imeJediniceParameter = imeJedinice != null ?
                new ObjectParameter("ImeJedinice", imeJedinice) :
                new ObjectParameter("ImeJedinice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Jedinicu_Result>("Dohvati_Jedinicu", imeJediniceParameter);
        }
    
        public virtual ObjectResult<Dohvati_KombinacijaDetalji_Result> Dohvati_KombinacijaDetalji(Nullable<int> kombinacijaDetaljiID)
        {
            var kombinacijaDetaljiIDParameter = kombinacijaDetaljiID.HasValue ?
                new ObjectParameter("KombinacijaDetaljiID", kombinacijaDetaljiID) :
                new ObjectParameter("KombinacijaDetaljiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_KombinacijaDetalji_Result>("Dohvati_KombinacijaDetalji", kombinacijaDetaljiIDParameter);
        }
    
        public virtual ObjectResult<Dohvati_Kombinaciju_Result> Dohvati_Kombinaciju(string kombinacijaID)
        {
            var kombinacijaIDParameter = kombinacijaID != null ?
                new ObjectParameter("KombinacijaID", kombinacijaID) :
                new ObjectParameter("KombinacijaID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Kombinaciju_Result>("Dohvati_Kombinaciju", kombinacijaIDParameter);
        }
    
        public virtual ObjectResult<Dohvati_Korisnika_Result> Dohvati_Korisnika(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Korisnika_Result>("Dohvati_Korisnika", korisnikIDParameter);
        }
    
        public virtual ObjectResult<string> Dohvati_Namirnice_Koristene_U_Meniju(Nullable<int> meniID)
        {
            var meniIDParameter = meniID.HasValue ?
                new ObjectParameter("MeniID", meniID) :
                new ObjectParameter("MeniID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Dohvati_Namirnice_Koristene_U_Meniju", meniIDParameter);
        }
    
        public virtual ObjectResult<Dohvati_Namirnicu_Result> Dohvati_Namirnicu(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Namirnicu_Result>("Dohvati_Namirnicu", nazivParameter);
        }
    
        public virtual ObjectResult<Dohvati_NazivObroka_Result> Dohvati_NazivObroka(string nazivObrokaID)
        {
            var nazivObrokaIDParameter = nazivObrokaID != null ?
                new ObjectParameter("NazivObrokaID", nazivObrokaID) :
                new ObjectParameter("NazivObrokaID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_NazivObroka_Result>("Dohvati_NazivObroka", nazivObrokaIDParameter);
        }
    
        public virtual ObjectResult<Dohvati_Sve_Jedinice_Result> Dohvati_Sve_Jedinice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Sve_Jedinice_Result>("Dohvati_Sve_Jedinice");
        }
    
        public virtual ObjectResult<Dohvati_Sve_Kombinacije_Result> Dohvati_Sve_Kombinacije()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Sve_Kombinacije_Result>("Dohvati_Sve_Kombinacije");
        }
    
        public virtual ObjectResult<Dohvati_Sve_KombinacijeDetalji_Result> Dohvati_Sve_KombinacijeDetalji()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Sve_KombinacijeDetalji_Result>("Dohvati_Sve_KombinacijeDetalji");
        }
    
        public virtual ObjectResult<Dohvati_Sve_Korisnike_Result> Dohvati_Sve_Korisnike()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Sve_Korisnike_Result>("Dohvati_Sve_Korisnike");
        }
    
        public virtual ObjectResult<Dohvati_Sve_Namirnice_Result> Dohvati_Sve_Namirnice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Sve_Namirnice_Result>("Dohvati_Sve_Namirnice");
        }
    
        public virtual ObjectResult<Dohvati_Sve_Nazive_Obroka_Result> Dohvati_Sve_Nazive_Obroka()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Sve_Nazive_Obroka_Result>("Dohvati_Sve_Nazive_Obroka");
        }
    
        public virtual ObjectResult<Dohvati_Sve_Obroke_Result> Dohvati_Sve_Obroke()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_Sve_Obroke_Result>("Dohvati_Sve_Obroke");
        }
    
        public virtual ObjectResult<Dohvati_TipNamirnice_Result> Dohvati_TipNamirnice(string tipNamirnice)
        {
            var tipNamirniceParameter = tipNamirnice != null ?
                new ObjectParameter("TipNamirnice", tipNamirnice) :
                new ObjectParameter("TipNamirnice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dohvati_TipNamirnice_Result>("Dohvati_TipNamirnice", tipNamirniceParameter);
        }
    
        public virtual ObjectResult<string> Izmjeni_Jedinicu(Nullable<int> jedinicaID, string novoImeJedinice)
        {
            var jedinicaIDParameter = jedinicaID.HasValue ?
                new ObjectParameter("JedinicaID", jedinicaID) :
                new ObjectParameter("JedinicaID", typeof(int));
    
            var novoImeJediniceParameter = novoImeJedinice != null ?
                new ObjectParameter("NovoImeJedinice", novoImeJedinice) :
                new ObjectParameter("NovoImeJedinice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Izmjeni_Jedinicu", jedinicaIDParameter, novoImeJediniceParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Izmjeni_KombinacijaDetalji(Nullable<int> kombinacijaDetaljiID, Nullable<int> nazivObrokaID, Nullable<int> uglj, Nullable<int> mast, Nullable<int> prot, Nullable<int> ukup, Nullable<int> kombinacijaID)
        {
            var kombinacijaDetaljiIDParameter = kombinacijaDetaljiID.HasValue ?
                new ObjectParameter("KombinacijaDetaljiID", kombinacijaDetaljiID) :
                new ObjectParameter("KombinacijaDetaljiID", typeof(int));
    
            var nazivObrokaIDParameter = nazivObrokaID.HasValue ?
                new ObjectParameter("NazivObrokaID", nazivObrokaID) :
                new ObjectParameter("NazivObrokaID", typeof(int));
    
            var ugljParameter = uglj.HasValue ?
                new ObjectParameter("Uglj", uglj) :
                new ObjectParameter("Uglj", typeof(int));
    
            var mastParameter = mast.HasValue ?
                new ObjectParameter("Mast", mast) :
                new ObjectParameter("Mast", typeof(int));
    
            var protParameter = prot.HasValue ?
                new ObjectParameter("Prot", prot) :
                new ObjectParameter("Prot", typeof(int));
    
            var ukupParameter = ukup.HasValue ?
                new ObjectParameter("Ukup", ukup) :
                new ObjectParameter("Ukup", typeof(int));
    
            var kombinacijaIDParameter = kombinacijaID.HasValue ?
                new ObjectParameter("KombinacijaID", kombinacijaID) :
                new ObjectParameter("KombinacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Izmjeni_KombinacijaDetalji", kombinacijaDetaljiIDParameter, nazivObrokaIDParameter, ugljParameter, mastParameter, protParameter, ukupParameter, kombinacijaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Izmjeni_Kombinaciju(Nullable<int> kombinacijaID, Nullable<int> brojObroka, Nullable<System.DateTime> datumKreiranja, Nullable<System.DateTime> vrijediDo)
        {
            var kombinacijaIDParameter = kombinacijaID.HasValue ?
                new ObjectParameter("KombinacijaID", kombinacijaID) :
                new ObjectParameter("KombinacijaID", typeof(int));
    
            var brojObrokaParameter = brojObroka.HasValue ?
                new ObjectParameter("BrojObroka", brojObroka) :
                new ObjectParameter("BrojObroka", typeof(int));
    
            var datumKreiranjaParameter = datumKreiranja.HasValue ?
                new ObjectParameter("DatumKreiranja", datumKreiranja) :
                new ObjectParameter("DatumKreiranja", typeof(System.DateTime));
    
            var vrijediDoParameter = vrijediDo.HasValue ?
                new ObjectParameter("VrijediDo", vrijediDo) :
                new ObjectParameter("VrijediDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Izmjeni_Kombinaciju", kombinacijaIDParameter, brojObrokaParameter, datumKreiranjaParameter, vrijediDoParameter);
        }
    
        public virtual ObjectResult<string> Izmjeni_Korisnika(string korisnicko_ime, string novoKorisnicko_ime, string novoLozinka, string novoEmail, string novoIme, string novoPrezime, Nullable<System.DateTime> novoDatumRodenja, Nullable<int> novoVisina, Nullable<int> novoTezina, Nullable<int> novoIDAktivnost, Nullable<int> novoTipDia, Nullable<int> novoIDSpol)
        {
            var korisnicko_imeParameter = korisnicko_ime != null ?
                new ObjectParameter("Korisnicko_ime", korisnicko_ime) :
                new ObjectParameter("Korisnicko_ime", typeof(string));
    
            var novoKorisnicko_imeParameter = novoKorisnicko_ime != null ?
                new ObjectParameter("NovoKorisnicko_ime", novoKorisnicko_ime) :
                new ObjectParameter("NovoKorisnicko_ime", typeof(string));
    
            var novoLozinkaParameter = novoLozinka != null ?
                new ObjectParameter("NovoLozinka", novoLozinka) :
                new ObjectParameter("NovoLozinka", typeof(string));
    
            var novoEmailParameter = novoEmail != null ?
                new ObjectParameter("NovoEmail", novoEmail) :
                new ObjectParameter("NovoEmail", typeof(string));
    
            var novoImeParameter = novoIme != null ?
                new ObjectParameter("NovoIme", novoIme) :
                new ObjectParameter("NovoIme", typeof(string));
    
            var novoPrezimeParameter = novoPrezime != null ?
                new ObjectParameter("NovoPrezime", novoPrezime) :
                new ObjectParameter("NovoPrezime", typeof(string));
    
            var novoDatumRodenjaParameter = novoDatumRodenja.HasValue ?
                new ObjectParameter("NovoDatumRodenja", novoDatumRodenja) :
                new ObjectParameter("NovoDatumRodenja", typeof(System.DateTime));
    
            var novoVisinaParameter = novoVisina.HasValue ?
                new ObjectParameter("NovoVisina", novoVisina) :
                new ObjectParameter("NovoVisina", typeof(int));
    
            var novoTezinaParameter = novoTezina.HasValue ?
                new ObjectParameter("NovoTezina", novoTezina) :
                new ObjectParameter("NovoTezina", typeof(int));
    
            var novoIDAktivnostParameter = novoIDAktivnost.HasValue ?
                new ObjectParameter("NovoIDAktivnost", novoIDAktivnost) :
                new ObjectParameter("NovoIDAktivnost", typeof(int));
    
            var novoTipDiaParameter = novoTipDia.HasValue ?
                new ObjectParameter("NovoTipDia", novoTipDia) :
                new ObjectParameter("NovoTipDia", typeof(int));
    
            var novoIDSpolParameter = novoIDSpol.HasValue ?
                new ObjectParameter("NovoIDSpol", novoIDSpol) :
                new ObjectParameter("NovoIDSpol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Izmjeni_Korisnika", korisnicko_imeParameter, novoKorisnicko_imeParameter, novoLozinkaParameter, novoEmailParameter, novoImeParameter, novoPrezimeParameter, novoDatumRodenjaParameter, novoVisinaParameter, novoTezinaParameter, novoIDAktivnostParameter, novoTipDiaParameter, novoIDSpolParameter);
        }
    
        public virtual ObjectResult<string> Izmjeni_Namirnicu(Nullable<int> iDNamirnica, string novoNaziv, Nullable<int> novoEnergija_kcal, Nullable<int> novoEnergija_kJ, Nullable<int> novoTipNamirniceID, Nullable<int> novoJedinicaID, Nullable<int> novoKolicina)
        {
            var iDNamirnicaParameter = iDNamirnica.HasValue ?
                new ObjectParameter("IDNamirnica", iDNamirnica) :
                new ObjectParameter("IDNamirnica", typeof(int));
    
            var novoNazivParameter = novoNaziv != null ?
                new ObjectParameter("NovoNaziv", novoNaziv) :
                new ObjectParameter("NovoNaziv", typeof(string));
    
            var novoEnergija_kcalParameter = novoEnergija_kcal.HasValue ?
                new ObjectParameter("NovoEnergija_kcal", novoEnergija_kcal) :
                new ObjectParameter("NovoEnergija_kcal", typeof(int));
    
            var novoEnergija_kJParameter = novoEnergija_kJ.HasValue ?
                new ObjectParameter("NovoEnergija_kJ", novoEnergija_kJ) :
                new ObjectParameter("NovoEnergija_kJ", typeof(int));
    
            var novoTipNamirniceIDParameter = novoTipNamirniceID.HasValue ?
                new ObjectParameter("NovoTipNamirniceID", novoTipNamirniceID) :
                new ObjectParameter("NovoTipNamirniceID", typeof(int));
    
            var novoJedinicaIDParameter = novoJedinicaID.HasValue ?
                new ObjectParameter("NovoJedinicaID", novoJedinicaID) :
                new ObjectParameter("NovoJedinicaID", typeof(int));
    
            var novoKolicinaParameter = novoKolicina.HasValue ?
                new ObjectParameter("NovoKolicina", novoKolicina) :
                new ObjectParameter("NovoKolicina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Izmjeni_Namirnicu", iDNamirnicaParameter, novoNazivParameter, novoEnergija_kcalParameter, novoEnergija_kJParameter, novoTipNamirniceIDParameter, novoJedinicaIDParameter, novoKolicinaParameter);
        }
    
        public virtual ObjectResult<string> Izmjeni_NazivObroka(string nazivObroka, string novoNazivObroka)
        {
            var nazivObrokaParameter = nazivObroka != null ?
                new ObjectParameter("NazivObroka", nazivObroka) :
                new ObjectParameter("NazivObroka", typeof(string));
    
            var novoNazivObrokaParameter = novoNazivObroka != null ?
                new ObjectParameter("NovoNazivObroka", novoNazivObroka) :
                new ObjectParameter("NovoNazivObroka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Izmjeni_NazivObroka", nazivObrokaParameter, novoNazivObrokaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Izmjeni_TipNamirnice(string tipNamirnice, string novoTipNamirnice)
        {
            var tipNamirniceParameter = tipNamirnice != null ?
                new ObjectParameter("TipNamirnice", tipNamirnice) :
                new ObjectParameter("TipNamirnice", typeof(string));
    
            var novoTipNamirniceParameter = novoTipNamirnice != null ?
                new ObjectParameter("NovoTipNamirnice", novoTipNamirnice) :
                new ObjectParameter("NovoTipNamirnice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Izmjeni_TipNamirnice", tipNamirniceParameter, novoTipNamirniceParameter);
        }
    
        public virtual ObjectResult<string> Obrisi_Jedinicu(Nullable<int> jedinicaID)
        {
            var jedinicaIDParameter = jedinicaID.HasValue ?
                new ObjectParameter("JedinicaID", jedinicaID) :
                new ObjectParameter("JedinicaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Obrisi_Jedinicu", jedinicaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Obrisi_KombinacijaDetalji(Nullable<int> kombinacijaDetaljiID)
        {
            var kombinacijaDetaljiIDParameter = kombinacijaDetaljiID.HasValue ?
                new ObjectParameter("KombinacijaDetaljiID", kombinacijaDetaljiID) :
                new ObjectParameter("KombinacijaDetaljiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Obrisi_KombinacijaDetalji", kombinacijaDetaljiIDParameter);
        }
    
        public virtual ObjectResult<string> Obrisi_Kombinaciju(Nullable<int> kombinacijaID)
        {
            var kombinacijaIDParameter = kombinacijaID.HasValue ?
                new ObjectParameter("KombinacijaID", kombinacijaID) :
                new ObjectParameter("KombinacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Obrisi_Kombinaciju", kombinacijaIDParameter);
        }
    
        public virtual ObjectResult<string> Obrisi_Korisnika(Nullable<int> iDKorisnik)
        {
            var iDKorisnikParameter = iDKorisnik.HasValue ?
                new ObjectParameter("IDKorisnik", iDKorisnik) :
                new ObjectParameter("IDKorisnik", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Obrisi_Korisnika", iDKorisnikParameter);
        }
    
        public virtual ObjectResult<string> Obrisi_Namirnicu(string iDNamirnica)
        {
            var iDNamirnicaParameter = iDNamirnica != null ?
                new ObjectParameter("IDNamirnica", iDNamirnica) :
                new ObjectParameter("IDNamirnica", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Obrisi_Namirnicu", iDNamirnicaParameter);
        }
    
        public virtual ObjectResult<string> Obrisi_NazivObroka(string nazivObroka)
        {
            var nazivObrokaParameter = nazivObroka != null ?
                new ObjectParameter("NazivObroka", nazivObroka) :
                new ObjectParameter("NazivObroka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Obrisi_NazivObroka", nazivObrokaParameter);
        }
    
        public virtual ObjectResult<string> Obrisi_TipNamirnice(string tipNamirnice)
        {
            var tipNamirniceParameter = tipNamirnice != null ?
                new ObjectParameter("TipNamirnice", tipNamirnice) :
                new ObjectParameter("TipNamirnice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Obrisi_TipNamirnice", tipNamirniceParameter);
        }
    
        public virtual int Odjavi_Admina(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Odjavi_Admina", korisnickoImeParameter);
        }
    
        public virtual int Prijavi_Admina(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Prijavi_Admina", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Provjeri_Admina(string korisnickoIme, string lozinka)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("Lozinka", lozinka) :
                new ObjectParameter("Lozinka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Provjeri_Admina", korisnickoImeParameter, lozinkaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Provjeri_Korisnika(string korisnickoIme, string lozinka)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("Lozinka", lozinka) :
                new ObjectParameter("Lozinka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Provjeri_Korisnika", korisnickoImeParameter, lozinkaParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
